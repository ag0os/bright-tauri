/**
 * Option 2: Modern Floating Label
 * Input with animated floating label
 * Style: Floating label animation, bordered input, modern feel
 * Best for: Modern apps, clean UX, reduced visual clutter
 */

.input-2 {
  /* Input Container */
  --input-gap: 0;  /* No gap - label floats inside */

  /* Label (starts inside input) */
  --input-label-font-size: var(--font-size-base);
  --input-label-font-size-float: var(--font-size-xs);
  --input-label-font-weight: var(--font-weight-normal);
  --input-label-color: var(--color-text-secondary);
  --input-label-color-focus: var(--color-primary);
  --input-label-transition: all 0.2s ease;

  /* Required Indicator */
  --input-required-color: #dc2626;

  /* Input Field */
  --input-border-radius: 6px;
  --input-border-width: 1px;
  --input-border-color: var(--color-border);
  --input-background: var(--color-surface);
  --input-text-color: var(--color-text-primary);
  --input-font-size: var(--font-size-base);
  --input-font-family: var(--typography-body-font);

  /* Input Sizes - Padding (extra top padding for floating label) */
  --input-padding-sm: 20px 12px 8px 12px;
  --input-padding-base: 24px 14px 10px 14px;
  --input-padding-lg: 28px 16px 12px 16px;

  /* Input Min Height */
  --input-min-height-sm: 52px;
  --input-min-height-base: 60px;
  --input-min-height-lg: 68px;

  /* Focus State */
  --input-focus-border-color: var(--color-primary);
  --input-focus-border-width: 2px;

  /* Error State */
  --input-error-border-color: #dc2626;
  --input-error-text-color: #dc2626;
  --input-error-label-color: #dc2626;

  /* Disabled State */
  --input-disabled-bg: var(--color-surface-hover);
  --input-disabled-text-color: var(--color-text-secondary);
  --input-disabled-border-color: var(--color-border);
  --input-disabled-opacity: 0.6;
  --input-disabled-cursor: not-allowed;

  /* Helper Text */
  --input-helper-font-size: var(--font-size-sm);
  --input-helper-color: var(--color-text-secondary);
  --input-helper-margin-top: 6px;

  /* Icon */
  --input-icon-size: 20px;
  --input-icon-color: var(--color-text-secondary);
  --input-icon-gap: 8px;

  /* Transition */
  --input-transition: all 0.2s ease;
}

/* Input Group Container */
.input-2 .input-group {
  display: flex;
  flex-direction: column;
  width: 100%;
}

/* Input Wrapper (for floating label positioning) */
.input-2 .input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

/* Label (positioned inside input) */
.input-2 .input-label {
  position: absolute;
  left: 14px;
  top: 50%;
  transform: translateY(-50%);
  font-family: var(--input-font-family);
  font-size: var(--input-label-font-size);
  font-weight: var(--input-label-font-weight);
  color: var(--input-label-color);
  transition: var(--input-label-transition);
  pointer-events: none;
  background-color: transparent;
  padding: 0 4px;
}

.input-2 .input-label .required {
  color: var(--input-required-color);
  margin-left: 2px;
}

/* Floating state (when focused or has value) */
.input-2 .input-wrapper.is-focused .input-label,
.input-2 .input-wrapper.has-value .input-label {
  top: 12px;
  transform: translateY(0);
  font-size: var(--input-label-font-size-float);
  font-weight: var(--font-weight-medium);
  background-color: var(--input-background);
}

.input-2 .input-wrapper.is-focused .input-label {
  color: var(--input-label-color-focus);
}

/* Input Field */
.input-2 .input-field {
  width: 100%;
  font-family: var(--input-font-family);
  font-size: var(--input-font-size);
  color: var(--input-text-color);
  background-color: var(--input-background);
  border: var(--input-border-width) solid var(--input-border-color);
  border-radius: var(--input-border-radius);
  transition: var(--input-transition);
  outline: none;
}

.input-2 .input-field:focus {
  border-color: var(--input-focus-border-color);
  border-width: var(--input-focus-border-width);
  /* Adjust padding to compensate for thicker border */
  padding-left: 13px;
  padding-right: 13px;
}

/* Size Variants */
.input-2 .input-field.input-sm {
  padding: var(--input-padding-sm);
  min-height: var(--input-min-height-sm);
}

.input-2 .input-field.input-base {
  padding: var(--input-padding-base);
  min-height: var(--input-min-height-base);
}

.input-2 .input-field.input-lg {
  padding: var(--input-padding-lg);
  min-height: var(--input-min-height-lg);
}

/* With Prefix Icon */
.input-2 .input-field.has-prefix {
  padding-left: calc(var(--input-icon-size) + var(--input-icon-gap) * 2);
}

.input-2 .input-wrapper.has-prefix .input-label {
  left: calc(var(--input-icon-size) + var(--input-icon-gap) * 2);
}

/* With Suffix Icon */
.input-2 .input-field.has-suffix {
  padding-right: calc(var(--input-icon-size) + var(--input-icon-gap) * 2);
}

/* Icon Styles */
.input-2 .input-icon-prefix,
.input-2 .input-icon-suffix {
  position: absolute;
  width: var(--input-icon-size);
  height: var(--input-icon-size);
  color: var(--input-icon-color);
  pointer-events: none;
  z-index: 1;
}

.input-2 .input-icon-prefix {
  left: var(--input-icon-gap);
}

.input-2 .input-icon-suffix {
  right: var(--input-icon-gap);
}

/* Error State */
.input-2 .input-group.has-error .input-field {
  border-color: var(--input-error-border-color);
}

.input-2 .input-group.has-error .input-label {
  color: var(--input-error-label-color);
}

/* Disabled State */
.input-2 .input-field:disabled {
  background-color: var(--input-disabled-bg);
  color: var(--input-disabled-text-color);
  border-color: var(--input-disabled-border-color);
  opacity: var(--input-disabled-opacity);
  cursor: var(--input-disabled-cursor);
}

/* Helper Text */
.input-2 .input-helper {
  font-family: var(--input-font-family);
  font-size: var(--input-helper-font-size);
  color: var(--input-helper-color);
  margin-top: var(--input-helper-margin-top);
  line-height: 1.4;
}

.input-2 .input-group.has-error .input-helper {
  color: var(--input-error-text-color);
}
